const http=require("http"),url=require("url"),codes=require("./codes.min.js");function groupBy(e,t){let r={};for(let n=0;n<e.length;n++)r[e[n][t]]||(r[e[n][t]]=[]),r[e[n][t]].push(e[n]);return r}const onlinx=()=>{const e=[],t={html:"text/html",".html":"text/html",json:"application/json",png:"image/png"};return{route:(t,r)=>{e.push({route:t.route,method:t.method,listener:r||t.listener})},listen:(r,n)=>{http.createServer(async(r,n)=>{let o="";r.on("data",e=>{o+=e.toString()});const s=url.parse(r.url,!0),l={...s,...r,body:o},u={send:e=>{n.write(e),n.end()},status:e=>{n.writeHead(e)},sendStatus:e=>{n.writeHead(e),n.write(codes[e]),n.end()},set:(e,t)=>n.setHeader(e,t),type:e=>n.setHeader("Content-Type",t[e]),...n},i=groupBy(e,"method");i[r.method]&&i[r.method].map(e=>{e.route==s.pathname&&e.listener(l,u)})}).listen(r,n)}}};module.exports=onlinx;
